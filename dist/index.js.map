{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert-is-object' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Tests whether any 'own' property of a provided object satisfies a predicate function.\n*\n* @param {Object} obj - input object\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean returned indicating whether any own property of an object pass a test\n*\n* @example\n* var anyOwnBy = require( '@stdlib/utils-any-own-by' );\n*\n* function isPositive( v ) {\n*     return ( v > 0 );\n* }\n*\n* var obj = { 'a': -1, 'b': 2, 'c': -3 };\n*\n* var bool = anyOwnBy( obj, isPositive );\n* // returns true\n*/\nfunction anyOwnBy( obj, predicate, thisArg ) {\n\tvar result;\n\tvar key;\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tresult = predicate.call( thisArg, obj[ key ], key, obj );\n\t\t\tif ( result ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = anyOwnBy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether any 'own' property of a provided object satisfies a predicate function.\n*\n* @module @stdlib/utils-any-own-by\n*\n* @example\n* var anyOwnBy = require( '@stdlib/utils-any-own-by' );\n*\n* function isPositive( v ) {\n*     return ( v > 0 );\n* }\n*\n* var obj = { 'a': -1, 'b': 2, 'c': -3 };\n*\n* var bool = anyOwnBy( obj, isPositive );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,0BAA2B,EAC/CC,EAAa,QAAS,4BAA6B,EACnDC,EAAa,QAAS,iCAAkC,EACxDC,EAAS,QAAS,uBAAwB,EA2B9C,SAASC,EAAUC,EAAKC,EAAWC,EAAU,CAC5C,IAAIC,EACAC,EACJ,GAAK,CAACT,EAAUK,CAAI,EACnB,MAAM,IAAI,UAAWF,EAAQ,mEAAoEE,CAAI,CAAE,EAExG,GAAK,CAACJ,EAAYK,CAAU,EAC3B,MAAM,IAAI,UAAWH,EAAQ,qEAAsEG,CAAU,CAAE,EAGhH,IAAMG,KAAOJ,EACZ,GAAKH,EAAYG,EAAKI,CAAI,IACzBD,EAASF,EAAU,KAAMC,EAASF,EAAKI,CAAI,EAAGA,EAAKJ,CAAI,EAClDG,GACJ,MAAO,GAIV,MAAO,EACR,CAKAT,EAAO,QAAUK,ICpCjB,IAAIM,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isObject", "isFunction", "hasOwnProp", "format", "anyOwnBy", "obj", "predicate", "thisArg", "result", "key", "main"]
}
